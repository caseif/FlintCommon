plugins {
    id 'java'
    id 'maven'
    id 'eclipse'
    id 'idea'
    id 'checkstyle'
    id 'net.minecrell.licenser' version '0.4.1'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'blue.lapis.methodremapper' version '0.2'
}

defaultTasks 'clean', 'updateLicenses', 'build', 'shadowJar'

// Project information
group = 'net.caseif.flint.common'
version = '1.3.6'

// Extended project information
ext.projectName = 'flintcommon'
ext.description = 'Code shared across implementations of Flint.'
ext.inceptionYear = '2015'
ext.packaging = 'jar'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

configurations {
    shadow
    compile {
        extendsFrom shadow
    }
    deployerJars
}

// Project repositories
repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'http://repo.caseif.net/content/groups/public/' }
}

ext {
    author = 'Max Roncace'

    versionSuffix = version.contains('SNAPSHOT') ? (
            (
                    System.getenv('GIT_COMMIT') ? ('-git('
                            + System.getenv('GIT_BRANCH')
                            .substring(System.getenv('GIT_BRANCH').split('/')[0].length() + 1) + '-'
                            + System.getenv('GIT_COMMIT').substring(0, 7) + ')') : ''
            )
                    + (System.getenv('BUILD_NUMBER') ? '-jnks' + System.getenv('BUILD_NUMBER') : '')
    ) : ''

    flintVersion = '1.3.2'

    guava = 'com.google.guava:guava:17.0'
    gson = 'com.google.code.gson:gson:2.2.4'
    flint = 'net.caseif.flint:flint:' + flintVersion
}

// Project dependencies
dependencies {
    compile guava
    compile gson
    shadow flint

    deployerJars 'org.apache.maven.wagon:wagon-ssh:3.3.2'
}

// Read source files using UTF-8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar.manifest.mainAttributes(
        'Created-By': System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
        'Specification-Title': 'Flint',
        'Specification-Version': flintVersion,
        'Specification-Vendor': 'Max Roncace',
        'Implementation-Title': name,
        'Implementation-Version': version + versionSuffix,
        'Implementation-Vendor': author
)

processResources {
    from 'LICENSE'
}

// License header formatting
license {
    include '**/*.java'
    ignoreFailures false
}

// check code style
checkstyle {
    configProperties = [
            'name': project.name,
            'year': project.inceptionYear
    ]
    configFile = file('etc/checkstyle.xml')
}

tasks.withType(Checkstyle){
    exclude '**/*.properties'
    exclude '**/*.yml'
}

jar {
    classifier = 'base'
}

shadowJar {
    configurations = [project.configurations.shadow]
    dependencies {
        exclude dependency('com.google.guava:guava')
        exclude dependency('com.google.code.gson:gson')
        exclude dependency('org.bukkit:bukkit')
    }
    classifier = ''

    finalizedBy tasks.remap
}

remap {
    inputTask = tasks.shadowJar
    config = project.file('etc/remap.txt')
}

task sourceJar(type: Jar) {
    from sourceSets.main.java
    from sourceSets.main.resources
    classifier = 'sources'
}

artifacts {
    archives shadowJar
    archives sourceJar
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        if (project.hasProperty('mavenRepo')) {
            repository(url: project.property('mavenRepo')) {
                if (project.hasProperty('mavenPrivKey')) {
                    authentication(userName: project.property('mavenUser'), privateKey: project.property('mavenPrivKey'))
                } else {
                    authentication(userName: project.property('mavenUser'), password: project.property('mavenPass'))
                }
            }
        }

        pom {
            groupId = project.group
            version = project.version
            artifactId = project.ext.projectName
            project {
                packaging 'jar'
                description project.ext.description
                url 'http://github.com/caseif/FlintCommon'

                scm {
                    url 'https://github.com/caseif/FlintCommon'
                    connection 'scm:git:git://github.com/caseif/FlintCommon.git'
                    developerConnection 'scm:git:git@github.com:caseif/FlintCommon.git'
                }

                licenses {
                    license {
                        name 'BSD 3-Clause'
                        url 'http://opensource.org/licenses/BSD-3-clause'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}

wrapper {
    gradleVersion = '5.4.1'
}
